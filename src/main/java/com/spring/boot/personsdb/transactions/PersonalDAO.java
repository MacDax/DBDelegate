package com.spring.boot.personsdb.transactions;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

public class PersonalDAO {

	private DataSource dataSource;
	
	public PersonalDAO(DataSource dataSource) {
		this.dataSource = dataSource;
	}
	
	public List<PersonalDTO> getPersonsData() throws Exception {
		try {
			return getPersonalData("SELECT * from persons");
		}catch(Exception e) {
			throw e;
		}
	}

	private List<PersonalDTO> getPersonalData(String string) throws Exception {
		List<PersonalDTO> personsList = new ArrayList<>();
		try{
			Connection conn = this.dataSource.getConnection();
			try{
				Statement stmt = conn.createStatement();
				System.out.println("get Data SQLString : " + string);
				ResultSet rs = stmt.executeQuery(string);
				while(rs.next()) {
					PersonalDTO person = new PersonalDTO();
					person.setFname(rs.getString("fname"));
					person.setLname(rs.getString("lname"));
					person.setId(rs.getInt("id"));
					personsList.add(person);
				}
			}catch(Exception ex) {
				throw ex;
			}
		}catch(Exception ex) {
			throw ex;
		}
		return personsList;
	}

	public boolean savePersonsData(List<PersonalDTO> persons) throws Exception {
		return savePersonsDataToDB(persons);
	}

	private boolean savePersonsDataToDB(List<PersonalDTO> persons) throws Exception {
		boolean result = false;
		Connection conn = null;
		try {
			conn = this.dataSource.getConnection();
			try{
				String sql = "insert into persons(fname,lname,address,service) values(?,?,?,?)";
				PreparedStatement st = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
				for(PersonalDTO person : persons) {
					System.out.println("Person data to save in db : " + person.toString());
					st.setString(1, person.getFname());
					st.setString(2, person.getLname());
					st.setString(3, null);
					st.setString(4, null);
					int update = st.executeUpdate();
					System.out.println("st exe done");
					ResultSet tableKeys = st.getGeneratedKeys();
					tableKeys.next();
					int autoGeneratedId = tableKeys.getInt(1);
					System.out.println(" autoGeneratedId : " + autoGeneratedId);
					if(update > 0) { result = true; }
				}
				st.close();
			}catch(Exception ex) {
				ex.printStackTrace();
				throw ex;
			}
		}catch(Exception ex) {
			ex.printStackTrace();
			throw ex;
		}finally {
			if(null != conn) {
				conn.close();
			}
		}
		return result;
	}
	
	
}
